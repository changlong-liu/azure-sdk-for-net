// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager;
using Azure.ResourceManager.Compute;
using Azure.ResourceManager.Compute.Models;
using Azure.ResourceManager.Compute.Tests.Helpers;
using Azure.ResourceManager.Resources;
using Azure.ResourceManager.TestFramework;
using NUnit.Framework;

namespace Azure.ResourceManager.Compute.Tests
{
    /// <summary> Test for Image. </summary>
    public partial class ImageContainerMockTests : ComputeTestBase
    {
        public ImageContainerMockTests(bool isAsync) : base(isAsync)
        {
        }

        private async Task<ImageContainer> GetImageContainerAsync()
        {
            var resourceGroup = await CreateResourceGroupAsync();
            return resourceGroup.GetImages();
        }

        [TestCase]
        [RecordedTest]
        public async Task CreateOrUpdate()
        {
            var container = await GetImageContainerAsync();
            // Example: Create a virtual machine image from a blob with DiskEncryptionSet resource.
            var imageName = "myImage";

            var parameters = new ImageData("West US")
            {
                StorageProfile = new ImageStorageProfile()
                {
                    OsDisk = new ImageOSDisk("Linux".ToOperatingSystemTypes(), "Generalized".ToOperatingSystemStateTypes())
                    {
                        BlobUri = "https://mystorageaccount.blob.core.windows.net/osimages/osimage.vhd",
                        DiskEncryptionSet = new DiskEncryptionSetParameters()
                        {
                            Id = new ResourceIdentifier("/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSets/{existing-diskEncryptionSet-name}"),
                        },
                    },
                },
            };

            container.CreateOrUpdate(imageName, parameters);
        }
        [TestCase]
        [RecordedTest]
        public async Task CreateOrUpdateAsync()
        {
            var container = await GetImageContainerAsync();
            // Example: Create a virtual machine image from a blob with DiskEncryptionSet resource.
            var imageName = "myImage";

            var parameters = new ImageData("West US")
            {
                StorageProfile = new ImageStorageProfile()
                {
                    OsDisk = new ImageOSDisk("Linux".ToOperatingSystemTypes(), "Generalized".ToOperatingSystemStateTypes())
                    {
                        BlobUri = "https://mystorageaccount.blob.core.windows.net/osimages/osimage.vhd",
                        DiskEncryptionSet = new DiskEncryptionSetParameters()
                        {
                            Id = new ResourceIdentifier("/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSets/{existing-diskEncryptionSet-name}"),
                        },
                    },
                },
            };

            await container.CreateOrUpdateAsync(imageName, parameters);
        }
    }
}
