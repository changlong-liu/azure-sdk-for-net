// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.Compute;
using Azure.ResourceManager.Compute.Models;
using Azure.ResourceManager.Compute.Tests.Helpers;
using Azure.ResourceManager.Resources;
using Azure.ResourceManager.TestFramework;
using NUnit.Framework;

namespace Azure.ResourceManager.Compute.Tests
{
    /// <summary> Test for SshPublicKey. </summary>
    public partial class SshPublicKeyContainerMockTests : ComputeTestBase
    {
        public SshPublicKeyContainerMockTests(bool isAsync) : base(isAsync)
        {
        }

        private async Task<SshPublicKeyContainer> GetSshPublicKeyContainerAsync()
        {
            var resourceGroup = await CreateResourceGroupAsync();
            return resourceGroup.GetSshPublicKeys();
        }

        [TestCase]
        [RecordedTest]
        public async Task CreateOrUpdate()
        {
            var container = await GetSshPublicKeyContainerAsync();
            // Example: Create a new SSH public key resource.
            var sshPublicKeyName = "mySshPublicKeyName";

            var parameters = new SshPublicKeyData("westus")
            {
                PublicKey = "{ssh-rsa public key}",
            };

            container.CreateOrUpdate(sshPublicKeyName, parameters);
        }
        [TestCase]
        [RecordedTest]
        public async Task CreateOrUpdateAsync()
        {
            var container = await GetSshPublicKeyContainerAsync();
            // Example: Create a new SSH public key resource.
            var sshPublicKeyName = "mySshPublicKeyName";

            var parameters = new SshPublicKeyData("westus")
            {
                PublicKey = "{ssh-rsa public key}",
            };

            await container.CreateOrUpdateAsync(sshPublicKeyName, parameters);
        }
    }
}
