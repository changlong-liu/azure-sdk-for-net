// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.Compute;
using Azure.ResourceManager.Compute.Models;
using Azure.ResourceManager.Compute.Tests;
using Azure.ResourceManager.Compute.Tests.Helpers;
using Azure.ResourceManager.Resources;
using Azure.ResourceManager.TestFramework;
using NUnit.Framework;

namespace Azure.ResourceManager.Compute.Tests.Mock
{
    /// <summary> Test for RestorePoint. </summary>
    public partial class RestorePointContainerMockTests : MockTestBase
    {
        public RestorePointContainerMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
        }

        private async Task<RestorePointContainer> GetRestorePointContainerAsync(string resourceGroupName, string restorePointCollectionName)
        {
            ResourceGroup resourceGroup = await TestHelper.CreateResourceGroupAsync(resourceGroupName, GetArmClient());
            RestorePointCollectionContainer restorePointCollectionContainer = resourceGroup.GetRestorePointCollections();
            RestorePointCollection restorePointCollection = await TestHelper.CreateOrUpdateExampleInstanceAsync(restorePointCollectionContainer, restorePointCollectionName);
            RestorePointContainer restorePointContainer = restorePointCollection.GetRestorePoints();
            return restorePointContainer;
        }

        [TestCase]
        [RecordedTest]
        public async Task CreateOrUpdateAsync()
        {
            // Example: Create a restore point
            var container = await GetRestorePointContainerAsync("myResourceGroup", "rpcName");
            var restorePointName = "rpName";
            var parameters = new RestorePointData();

            await container.CreateOrUpdateAsync(restorePointName, parameters);
        }
    }
}
