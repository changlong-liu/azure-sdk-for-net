// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.Compute;
using Azure.ResourceManager.Compute.Models;
using Azure.ResourceManager.Compute.Tests;
using Azure.ResourceManager.Compute.Tests.Helpers;
using Azure.ResourceManager.Resources;
using Azure.ResourceManager.TestFramework;
using NUnit.Framework;

namespace Azure.ResourceManager.Compute.Tests.Mock
{
    /// <summary> Test for GalleryApplicationVersion. </summary>
    public partial class GalleryApplicationVersionContainerMockTests : MockTestBase
    {
        public GalleryApplicationVersionContainerMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
        }

        private async Task<GalleryApplicationVersionContainer> GetGalleryApplicationVersionContainerAsync(string resourceGroupName, string galleryName, string galleryApplicationName)
        {
            ResourceGroup resourceGroup = await TestHelper.CreateResourceGroupAsync(resourceGroupName, GetArmClient());
            GalleryContainer galleryContainer = resourceGroup.GetGalleries();
            Gallery gallery = await TestHelper.CreateOrUpdateExampleInstanceAsync(galleryContainer, galleryName);
            GalleryApplicationContainer galleryApplicationContainer = gallery.GetGalleryApplications();
            GalleryApplication galleryApplication = await TestHelper.CreateOrUpdateExampleInstanceAsync(galleryApplicationContainer, galleryApplicationName);
            GalleryApplicationVersionContainer galleryApplicationVersionContainer = galleryApplication.GetGalleryApplicationVersions();
            return galleryApplicationVersionContainer;
        }

        [TestCase]
        [RecordedTest]
        public async Task CreateOrUpdateAsync()
        {
            // Example: Create or update a simple gallery Application Version.
            var container = await GetGalleryApplicationVersionContainerAsync("myResourceGroup", "myGalleryName", "myGalleryApplicationName");
            var galleryApplicationVersionName = "1.0.0";
            var galleryApplicationVersion = new GalleryApplicationVersionData("West US")
            {
                PublishingProfile = new GalleryApplicationVersionPublishingProfile(new UserArtifactSource("https://mystorageaccount.blob.core.windows.net/mycontainer/package.zip?{sasKey}"))
                {
                    ManageActions = new UserArtifactManage("powershell -command \"Expand-Archive -Path package.zip -DestinationPath C:\\package\"", "del C:\\package "),
                    ReplicaCount = 1,
                    EndOfLifeDate = DateTimeOffset.Parse("2019-07-01T07:00:00Z"),
                    StorageAccountType = new Compute.Models.StorageAccountType("Standard_LRS"),
                },
            };

            await container.CreateOrUpdateAsync(galleryApplicationVersionName, galleryApplicationVersion);
        }
    }
}
