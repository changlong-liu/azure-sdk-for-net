// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.Compute;
using Azure.ResourceManager.Compute.Models;
using Azure.ResourceManager.Compute.Tests;
using Azure.ResourceManager.Compute.Tests.Helpers;
using Azure.ResourceManager.Resources;
using Azure.ResourceManager.TestFramework;
using NUnit.Framework;

namespace Azure.ResourceManager.Compute.Tests.Mock
{
    /// <summary> Test for GalleryApplication. </summary>
    public partial class GalleryApplicationContainerMockTests : MockTestBase
    {
        public GalleryApplicationContainerMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
        }

        private async Task<GalleryApplicationContainer> GetGalleryApplicationContainerAsync(string resourceGroupName, string galleryName)
        {
            ResourceGroup resourceGroup = await TestHelper.CreateResourceGroupAsync(resourceGroupName, GetArmClient());
            GalleryContainer galleryContainer = resourceGroup.GetGalleries();
            Gallery gallery = await TestHelper.CreateOrUpdateExampleInstanceAsync(galleryContainer, galleryName);
            GalleryApplicationContainer galleryApplicationContainer = gallery.GetGalleryApplications();
            return galleryApplicationContainer;
        }

        [TestCase]
        [RecordedTest]
        public async Task CreateOrUpdateAsync()
        {
            // Example: Create or update a simple gallery Application.
            var container = await GetGalleryApplicationContainerAsync("myResourceGroup", "myGalleryName");
            var galleryApplicationName = "myGalleryApplicationName";
            var galleryApplication = new GalleryApplicationData("West US")
            {
                Description = "This is the gallery application description.",
                Eula = "This is the gallery application EULA.",
                PrivacyStatementUri = "myPrivacyStatementUri}",
                ReleaseNoteUri = "myReleaseNoteUri",
                SupportedOSType = "Windows".ToOperatingSystemTypes(),
            };

            await container.CreateOrUpdateAsync(galleryApplicationName, galleryApplication);
        }
    }
}
