// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.Compute;
using Azure.ResourceManager.Compute.Models;
using Azure.ResourceManager.Compute.Tests;
using Azure.ResourceManager.Compute.Tests.Helpers;
using Azure.ResourceManager.Resources;
using Azure.ResourceManager.TestFramework;
using NUnit.Framework;

namespace Azure.ResourceManager.Compute.Tests.Mock
{
    /// <summary> Test for Gallery. </summary>
    public partial class GalleryContainerMockTests : MockTestBase
    {
        public GalleryContainerMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
        }

        private async Task<GalleryContainer> GetGalleryContainerAsync(string resourceGroupName)
        {
            ResourceGroup resourceGroup = await TestHelper.CreateResourceGroupAsync(resourceGroupName, GetArmClient());
            GalleryContainer galleryContainer = resourceGroup.GetGalleries();
            return galleryContainer;
        }

        [TestCase]
        [RecordedTest]
        public async Task CreateOrUpdateAsync()
        {
            // Example: Create or update a simple gallery with sharing profile.
            var container = await GetGalleryContainerAsync("myResourceGroup");
            var galleryName = "myGalleryName";
            var gallery = new GalleryData("West US")
            {
                Description = "This is the gallery description.",
                SharingProfile = new SharingProfile()
                {
                    Permissions = new Compute.Models.GallerySharingPermissionTypes("Groups"),
                },
            };

            await container.CreateOrUpdateAsync(galleryName, gallery);
        }
    }
}
