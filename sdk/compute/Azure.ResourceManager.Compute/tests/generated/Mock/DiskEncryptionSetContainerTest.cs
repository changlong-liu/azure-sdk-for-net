// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.Compute;
using Azure.ResourceManager.Compute.Models;
using Azure.ResourceManager.Compute.Tests.Helpers;
using Azure.ResourceManager.Resources;
using Azure.ResourceManager.TestFramework;
using NUnit.Framework;

namespace Azure.ResourceManager.Compute.Tests
{
    /// <summary> Test for DiskEncryptionSet. </summary>
    public partial class DiskEncryptionSetContainerMockTests : ComputeTestBase
    {
        public DiskEncryptionSetContainerMockTests(bool isAsync) : base(isAsync)
        {
        }

        private async Task<DiskEncryptionSetContainer> GetDiskEncryptionSetContainerAsync()
        {
            var resourceGroup = await CreateResourceGroupAsync();
            return resourceGroup.GetDiskEncryptionSets();
        }

        [TestCase]
        [RecordedTest]
        public async Task CreateOrUpdate()
        {
            var container = await GetDiskEncryptionSetContainerAsync();
            // Example: Create a disk encryption set with key vault from a different subscription.
            var diskEncryptionSetName = "myDiskEncryptionSet";
            var diskEncryptionSet = new DiskEncryptionSetData("West US")
            {
                Identity = new EncryptionSetIdentity()
                {
                    Type = new Compute.Models.DiskEncryptionSetIdentityType("SystemAssigned"),
                },
                EncryptionType = new Compute.Models.DiskEncryptionSetType("EncryptionAtRestWithCustomerKey"),
                ActiveKey = new KeyForDiskEncryptionSet("https://myvaultdifferentsub.vault-int.azure-int.net/keys/{key}"),
            };

            container.CreateOrUpdate(diskEncryptionSetName, diskEncryptionSet);
        }
        [TestCase]
        [RecordedTest]
        public async Task CreateOrUpdateAsync()
        {
            var container = await GetDiskEncryptionSetContainerAsync();
            // Example: Create a disk encryption set with key vault from a different subscription.
            var diskEncryptionSetName = "myDiskEncryptionSet";
            var diskEncryptionSet = new DiskEncryptionSetData("West US")
            {
                Identity = new EncryptionSetIdentity()
                {
                    Type = new Compute.Models.DiskEncryptionSetIdentityType("SystemAssigned"),
                },
                EncryptionType = new Compute.Models.DiskEncryptionSetType("EncryptionAtRestWithCustomerKey"),
                ActiveKey = new KeyForDiskEncryptionSet("https://myvaultdifferentsub.vault-int.azure-int.net/keys/{key}"),
            };

            await container.CreateOrUpdateAsync(diskEncryptionSetName, diskEncryptionSet);
        }
    }
}
