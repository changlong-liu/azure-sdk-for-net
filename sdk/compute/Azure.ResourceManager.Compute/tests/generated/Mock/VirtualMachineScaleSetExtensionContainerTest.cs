// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.Compute;
using Azure.ResourceManager.Compute.Models;
using Azure.ResourceManager.Compute.Tests;
using Azure.ResourceManager.Compute.Tests.Helpers;
using Azure.ResourceManager.Resources;
using Azure.ResourceManager.TestFramework;
using NUnit.Framework;

namespace Azure.ResourceManager.Compute.Tests.Mock
{
    /// <summary> Test for VirtualMachineScaleSetExtension. </summary>
    public partial class VirtualMachineScaleSetExtensionContainerMockTests : MockTestBase
    {
        public VirtualMachineScaleSetExtensionContainerMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
        }

        private async Task<VirtualMachineScaleSetExtensionContainer> GetVirtualMachineScaleSetExtensionContainerAsync(string resourceGroupName, string vmScaleSetName)
        {
            ResourceGroup resourceGroup = await TestHelper.CreateResourceGroupAsync(resourceGroupName, GetArmClient());
            VirtualMachineScaleSetContainer virtualMachineScaleSetContainer = resourceGroup.GetVirtualMachineScaleSets();
            VirtualMachineScaleSet virtualMachineScaleSet = await TestHelper.CreateOrUpdateExampleInstanceAsync(virtualMachineScaleSetContainer, vmScaleSetName);
            VirtualMachineScaleSetExtensionContainer virtualMachineScaleSetExtensionContainer = virtualMachineScaleSet.GetVirtualMachineScaleSetExtensions();
            return virtualMachineScaleSetExtensionContainer;
        }
    }
}
