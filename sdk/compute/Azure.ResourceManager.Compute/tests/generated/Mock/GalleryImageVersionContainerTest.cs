// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager;
using Azure.ResourceManager.Compute;
using Azure.ResourceManager.Compute.Models;
using Azure.ResourceManager.Compute.Tests;
using Azure.ResourceManager.Compute.Tests.Helpers;
using Azure.ResourceManager.Resources;
using Azure.ResourceManager.TestFramework;
using NUnit.Framework;

namespace Azure.ResourceManager.Compute.Tests.Mock
{
    /// <summary> Test for GalleryImageVersion. </summary>
    public partial class GalleryImageVersionContainerMockTests : MockTestBase
    {
        public GalleryImageVersionContainerMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
        }

        private async Task<GalleryImageVersionContainer> GetGalleryImageVersionContainerAsync(string resourceGroupName, string galleryName, string galleryImageName)
        {
            ResourceGroup resourceGroup = await TestHelper.CreateResourceGroupAsync(resourceGroupName, GetArmClient());
            GalleryContainer galleryContainer = resourceGroup.GetGalleries();
            Gallery gallery = await TestHelper.CreateOrUpdateExampleInstanceAsync(galleryContainer, galleryName);
            GalleryImageContainer galleryImageContainer = gallery.GetGalleryImages();
            GalleryImage galleryImage = await TestHelper.CreateOrUpdateExampleInstanceAsync(galleryImageContainer, galleryImageName);
            GalleryImageVersionContainer galleryImageVersionContainer = galleryImage.GetGalleryImageVersions();
            return galleryImageVersionContainer;
        }

        [TestCase]
        [RecordedTest]
        public async Task CreateOrUpdateAsync()
        {
            // Example: Create or update a simple Gallery Image Version using VM as source.
            var container = await GetGalleryImageVersionContainerAsync("myResourceGroup", "myGalleryName", "myGalleryImageName");
            var galleryImageVersionName = "1.0.0";
            var galleryImageVersion = new GalleryImageVersionData("West US")
            {
                PublishingProfile = new GalleryImageVersionPublishingProfile(),
                StorageProfile = new GalleryImageVersionStorageProfile()
                {
                    Source = new GalleryArtifactVersionSource()
                    {
                        Id = new ResourceIdentifier($"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/{{resourceGroup}}/providers/Microsoft.Compute/virtualMachines/{{vmName}}"),
                    },
                },
            };

            await container.CreateOrUpdateAsync(galleryImageVersionName, galleryImageVersion);
        }
    }
}
