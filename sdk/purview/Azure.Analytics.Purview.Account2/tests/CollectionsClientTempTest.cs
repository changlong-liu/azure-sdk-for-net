// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.IO;
using System.Net.Http;
using System.Text.Json;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Core.Pipeline;
using Azure.Core.TestFramework;
using NUnit.Framework;

namespace Azure.Analytics.Purview.Account.Tests.Mock
{
    /// <summary> Test for AutoRest.CSharp.Output.Models.LowLevelClient. </summary>
    public partial class CollectionsClientTempTests : RecordedTestBase<PurviewAccountTestEnvironment>
    {
        private PurviewAccountClientOptions options;

        public CollectionsClientTempTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            var httpHandler = new HttpClientHandler();
            httpHandler.ServerCertificateCustomValidationCallback = (_, _, _, _) =>
            {
                return true;
            };
            options = new PurviewAccountClientOptions { Transport = new HttpClientTransport(httpHandler) };
        }
        [RecordedTest]
        [TestCase]
        public async Task GetCollection()
        {
            // Example: Collections_GetCollection
            CollectionsClient client = new CollectionsClient(new Uri("https://localhost:8443"), "collectionName", new MockCredential(), options);

            var data = new
            {
                parentCollection = new
                {
                    referenceName = "dotnetLLCPurviewAccount"
                },
            };
            Response createResponse = await client.CreateOrUpdateCollectionAsync(RequestContent.Create(data), default);
            JsonElement createBodyJson = JsonDocument.Parse(GetContentFromResponse(createResponse)).RootElement;
            Console.WriteLine($"{createBodyJson}");
        }

        private static BinaryData GetContentFromResponse(Response r)
        {
            // Workaround azure/azure-sdk-for-net#21048, which prevents .Content from working when dealing with responses
            // from the playback system.

            MemoryStream ms = new MemoryStream();
            r.ContentStream.CopyTo(ms);
            return new BinaryData(ms.ToArray());
        }
    }
}
